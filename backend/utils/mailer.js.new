const nodemailer = require("nodemailer");
require("dotenv").config();

// üìå Setup transporter
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: Number(process.env.SMTP_PORT),
  secure: Number(process.env.SMTP_PORT) === 465,
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
  tls: {
    rejectUnauthorized: false
  }
});

// Verify connection on startup
transporter.verify(function(error, success) {
  if (error) {
    console.log("‚ùå SMTP Connection error:", error);
  } else {
    console.log("‚úÖ SMTP Server is ready to send emails");
  }
});

// Email functions are now disabled and will just log instead of sending
const sendApprovalMail = async (to, visitorName, visitor) => {
  console.log("Email sending disabled - Approval notification would have been sent to:", to);
  return null;
};

const sendRejectionMail = async (to, visitorName) => {
  console.log("Email sending disabled - Rejection notification would have been sent to:", to);
  return null;
};

// Basic email sending function for admin notifications only
const sendMail = async (to, subject, html) => {
  try {
    const info = await transporter.sendMail({
      from: process.env.FROM_EMAIL,
      to,
      subject,
      html
    });
    console.log("‚úÖ Email sent:", info.messageId);
    return info;
  } catch (error) {
    console.error("‚ùå Error sending email:", error.message);
    throw error;
  }
};

module.exports = { 
  sendApprovalMail, 
  sendRejectionMail,
  sendMail,
  transporter
};
